<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.dao.AddressInfoMapper">
  <resultMap id="BaseResultMap" type="com.travel.entity.AddressInfo">
    <id column="address_uid" jdbcType="VARCHAR" property="addressUid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="street_id" jdbcType="VARCHAR" property="streetId" />
    <result column="created_tm" jdbcType="TIMESTAMP" property="createdTm" />
    <result column="updated_tm" jdbcType="TIMESTAMP" property="updatedTm" />
    <result column="url" jdbcType="VARCHAR" property="url" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    address_uid, name, latitude, longitude, address, province, city, area, street_id, 
    created_tm, updated_tm, url
  </sql>
  <select id="selectByExample" parameterType="com.travel.entity.AddressInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from travel_address_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from travel_address_info
    where address_uid = #{addressUid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from travel_address_info
    where address_uid = #{addressUid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.travel.entity.AddressInfoExample">
    delete from travel_address_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.travel.entity.AddressInfo">
    insert into travel_address_info (address_uid, name, latitude, 
      longitude, address, province, 
      city, area, street_id, 
      created_tm, updated_tm, url
      )
    values (#{addressUid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{latitude,jdbcType=DOUBLE}, 
      #{longitude,jdbcType=DOUBLE}, #{address,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{streetId,jdbcType=VARCHAR}, 
      #{createdTm,jdbcType=TIMESTAMP}, #{updatedTm,jdbcType=TIMESTAMP}, #{url,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.travel.entity.AddressInfo">
    insert into travel_address_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addressUid != null">
        address_uid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="streetId != null">
        street_id,
      </if>
      <if test="createdTm != null">
        created_tm,
      </if>
      <if test="updatedTm != null">
        updated_tm,
      </if>
      <if test="url != null">
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addressUid != null">
        #{addressUid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        #{streetId,jdbcType=VARCHAR},
      </if>
      <if test="createdTm != null">
        #{createdTm,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTm != null">
        #{updatedTm,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.travel.entity.AddressInfoExample" resultType="java.lang.Long">
    select count(*) from travel_address_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update travel_address_info
    <set>
      <if test="record.addressUid != null">
        address_uid = #{record.addressUid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.streetId != null">
        street_id = #{record.streetId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTm != null">
        created_tm = #{record.createdTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTm != null">
        updated_tm = #{record.updatedTm,jdbcType=TIMESTAMP},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update travel_address_info
    set address_uid = #{record.addressUid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      address = #{record.address,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      street_id = #{record.streetId,jdbcType=VARCHAR},
      created_tm = #{record.createdTm,jdbcType=TIMESTAMP},
      updated_tm = #{record.updatedTm,jdbcType=TIMESTAMP},
      url = #{record.url,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.travel.entity.AddressInfo">
    update travel_address_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null">
        street_id = #{streetId,jdbcType=VARCHAR},
      </if>
      <if test="createdTm != null">
        created_tm = #{createdTm,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTm != null">
        updated_tm = #{updatedTm,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
    </set>
    where address_uid = #{addressUid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.travel.entity.AddressInfo">
    update travel_address_info
    set name = #{name,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=DOUBLE},
      longitude = #{longitude,jdbcType=DOUBLE},
      address = #{address,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      street_id = #{streetId,jdbcType=VARCHAR},
      created_tm = #{createdTm,jdbcType=TIMESTAMP},
      updated_tm = #{updatedTm,jdbcType=TIMESTAMP},
      url = #{url,jdbcType=VARCHAR}
    where address_uid = #{addressUid,jdbcType=VARCHAR}
  </update>
</mapper>